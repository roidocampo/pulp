#!/bin/bash

# Helper function: readlink substitute (for using in Macs)
# Code from: http://stackoverflow.com/a/1116890

function true_path {(

    TARGET_FILE=$1

    cd `dirname $TARGET_FILE`
    TARGET_FILE=`basename $TARGET_FILE`

    # Iterate down a (possible) chain of symlinks
    while [ -L "$TARGET_FILE" ]
    do
        TARGET_FILE=`readlink $TARGET_FILE`
        cd `dirname $TARGET_FILE`
        TARGET_FILE=`basename $TARGET_FILE`
    done

    # Compute the canonicalized name by finding the physical path 
    # for the directory we're in and appending the target file.
    PHYS_DIR=`pwd -P`
    RESULT=$PHYS_DIR/$TARGET_FILE
    echo $RESULT

)}

# Set HOME

SCRIPT_PATH="$(true_path "$0")"
BIN_DIR="$(dirname "$SCRIPT_PATH")"
LOCAL_DIR="$(dirname "$BIN_DIR")"
HOME="$(dirname "$LOCAL_DIR")"

mkdir -p "$HOME"

export HOME

# Function no longer needed

unset -f true_path

# Helper function to modify PATH

function prepend_to {
    if [ -d "$2" ] && [ "${!1}" != "$2" ]; then
        eval $1=${!1//":$2:"/:}     # delete in the middle
        eval $1=${!1/%":$2"/}       # delete at the end
        eval $1=${!1/#"$2:"/}       # delete at the beginning
        eval $1="$2${!1:+":${!1}"}" # prepend value
    fi
}

# Clean PATH

PATH=""
MANPATH=""
unset PYTHONPATH

# Basic PATH

prepend_to "PATH" "/sbin"
prepend_to "PATH" "/usr/sbin"
prepend_to "PATH" "/bin"
prepend_to "PATH" "/usr/bin"
prepend_to "PATH" "$BIN_DIR"

# Basic MANPATH

prepend_to "MANPATH" "/usr/share/man"

# Function no longer needed

unset -f prepend_to

# Export variables

export PATH
export MANPATH

# Indicate that the jail is active

export PATH_SET=yes
export GTK_JAIL="active"

# Run the command (or enter s jhbuild hell, if no command is given)

if [ -n "$*" ]; then
    exec "$@"
elif hash jhbuild 2>/dev/null; then
    exec jhbuild shell
else
    echo "Error: jhbuild not installed in this jail."
fi
